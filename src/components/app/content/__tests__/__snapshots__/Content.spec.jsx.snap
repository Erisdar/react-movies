// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Content component should be render correctly with DETAIL INFO 1`] = `
<Content
  loadPopularFilms={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  popular={Array []}
  view="detail"
>
  <div
    className="content d-flex flex-column mb-auto"
  >
    <mockConstructor>
      <div
        className="content__detail-film-info"
      />
    </mockConstructor>
    <ErrorBoundary>
      <mockConstructor>
        <div
          className="content__film-list"
        />
      </mockConstructor>
    </ErrorBoundary>
  </div>
</Content>
`;

exports[`Content component should be render correctly with ErrorBoundary 1`] = `
<Content
  loadPopularFilms={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  popular={Array []}
  view="briefly"
>
  <div
    className="content d-flex flex-column mb-auto"
  >
    <mockConstructor>
      <div
        className="content__search"
      />
    </mockConstructor>
    <ErrorBoundary>
      <div
        className="film-list content__film-list d-flex align-self-center flex-column justify-content-start"
      >
        <h1>
          Sorry, server is not responding now
        </h1>
      </div>
    </ErrorBoundary>
  </div>
</Content>
`;

exports[`Content component should be render correctly with SEARCH 1`] = `
<Content
  loadPopularFilms={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  popular={Array []}
  view="briefly"
>
  <div
    className="content d-flex flex-column mb-auto"
  >
    <mockConstructor>
      <div
        className="content__search"
      />
    </mockConstructor>
    <ErrorBoundary>
      <mockConstructor>
        <div
          className="content__film-list"
        />
      </mockConstructor>
    </ErrorBoundary>
  </div>
</Content>
`;
